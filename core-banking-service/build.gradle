plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.0.0.2929"
	id 'jacoco' // Adding Jacoco plugin for code coverage
}

group = 'com.ba'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2023.0.0")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// SPRING BOOT - TRACING
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.github.openfeign:feign-micrometer'

	// SPRING CLOUD CONFIG
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.flywaydb:flyway-core:10.12.0'
	implementation 'org.flywaydb:flyway-mysql:10.12.0'
	implementation 'com.mysql:mysql-connector-j:8.4.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Ensure Jacoco report is generated after tests
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true // Ensure XML report is generated for SonarQube
		html.required = true
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "core_banking_service"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "sqp_80b5a329d9aaf23cd7fa635e1724fb6c058d5fe3"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.junit.reportPaths", "build/test-results/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml" // Use the XML report generated by Jacoco
	}
}
